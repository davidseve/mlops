---
# curl -L -X POST 'https://el-pipeline-upload-fraud.apps.ocp.sandbox342.opentlc.com'--data '{}'
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: el-pipeline-upload
  namespace: {{ $.Values.project.name }}
  labels:
    app.kubernetes.io/managed-by: EventListener
    app.kubernetes.io/part-of: Triggers
spec:
  to:
    kind: Service
    name: el-pipeline-upload
    weight: 100
  port:
    targetPort: http-listener
  wildcardPolicy: None
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: pipeline-upload
  namespace: {{ $.Values.project.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  serviceAccountName: pipeline
  triggers:
    - triggerRef: pipeline-upload
---
apiVersion: triggers.tekton.dev/v1beta1 
kind: Trigger 
metadata:
  name: pipeline-upload
  namespace: {{ $.Values.project.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  serviceAccountName: pipeline 
  interceptors:
    - ref:
        name: cel
      params:
      - name: filter
        # execute only when a file within the ai-examples/fraud-detection/pipeline/ directory has changed
        value: >
          body.commits.exists(c,
            c.added.exists(f, f.startsWith('ai-examples/fraud-detection/pipeline/')) ||
            c.modified.exists(f, f.startsWith('ai-examples/fraud-detection/pipeline/')) ||
            c.removed.exists(f, f.startsWith('ai-examples/fraud-detection/pipeline/'))
          )
  bindings:
    - ref: pipeline-upload-binding
  template: 
    ref: pipeline-upload-template
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: pipeline-upload-binding
  namespace: {{ $.Values.project.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  params:
    - name: body
      value: $(body)
    - name: header
      value: $(header)
    # - name: repository-name
    #   value: $(body.repository.name)
    # - name: branch-name
    #   value: $(body.pullrequest.destination.branch.name)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: pipeline-upload-template
  namespace: {{ $.Values.project.name }}
  annotations:
    triggers.tekton.dev/old-escape-quotes: "true"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: pipeline-upload-{{ .Values.pipeline.name }}
        namespace: {{ $.Values.project.name }}
        labels:
          pipeline-upload: "{{ .Values.pipeline.name }}"
      spec:
        pipelineRef:
          name: pipeline-upload-{{ .Values.pipeline.name }}
        workspaces:
        - name: workspace-source
          persistentVolumeClaim:
            claimName: pipeline-upload-{{ .Values.pipeline.name }}-source-pvc
